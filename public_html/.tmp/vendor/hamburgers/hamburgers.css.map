{"version":3,"sources":["vendor/hamburgers/hamburgers.scss","vendor/hamburgers/_base.scss","abstracts/_colors.scss","vendor/hamburgers/types/_squeeze.scss"],"names":[],"mappings":"AACA;;;;;;GAMG;ACLH;EACE,iBDU8C;ECT9C,sBAAqB;EACrB,gBAAe;EACf,cAAa;EAEb,qDAAoC;EAApC,6CAAoC;EAApC,qCAAoC;EAApC,qDAAoC;EACpC,mCDYgD;ECZhD,2BDYgD;ECXhD,2CDYiD;ECZjD,mCDYiD;ECTjD,cAAa;EACb,eAAc;EACd,qBAAoB;EACpB,8BAA6B;EAC7B,UAAS;EACT,UAAS;EACT,kBAAiB,EAkDlB;EAnED;IAwBM,WDNwC,ECQ3C;EAED;IACE,YDhB6C;ICiB7C,aAAkE;IAClE,sBAAqB;IACrB,mBAAkB,EACnB;EAED;IACE,eAAc;IACd,SAAQ;IACR,iBAAwC,EA4BzC;IA/BA;MAQG,YD9B2C;MC+B3C,YD9B0C;MC+B1C,0BCxBmB;MDyBnB,mBD7B0C;MC8B1C,mBAAkB;MAClB,+CAA8B;MAA9B,uCAA8B;MAA9B,+BAA8B;MAA9B,kDAA8B;MAC9B,mCAA0B;MAA1B,2BAA0B;MAC1B,yCAAgC;MAAhC,iCAAgC,EACjC;IAhBF;MAoBG,YAAW;MACX,eAAc,EACf;IAtBF;MAyBG,WAA8D,EAC/D;IA1BF;MA6BG,cAAiE,EAClE;;AElEH;;KAEG;AACH;EAEI,oCAA2B;EAA3B,4BAA2B;EAC3B,2EAAkE;EAAlE,mEAAkE,EAWnE;EAdH;IAMM,+DAC+B;IAD/B,uDAC+B,EAChC;EARL;IAWM,8GACmE;IADnE,sGACmE;IADnE,8FACmE;IADnE,+JACmE,EACpE;;AAbL;EAkBM,iCAAwB;EAAxB,yBAAwB;EACxB,gCAAuB;EAAvB,wBAAuB;EACvB,wEAA+D;EAA/D,gEAA+D,EAehE;EAnCL;IAuBQ,OAAM;IACN,WAAU;IACV,+DACqC;IADrC,uDACqC,EACtC;EA3BP;IA8BQ,UAAS;IACT,kCAAyB;IAAzB,0BAAyB;IACzB,2GACsE;IADtE,mGACsE;IADtE,2FACsE;IADtE,+JACsE,EACvE","file":"hamburgers.css","sourcesContent":["@charset \"UTF-8\";\n/*!\n * Hamburgers\n * @description Tasty CSS-animated hamburgers\n * @author Jonathan Suh @jonsuh\n * @site https://jonsuh.com/hamburgers\n * @link https://github.com/jonsuh/hamburgers\n */\n\n@import \"../../abstracts/colors\";\n\n// Settings\n// ==================================================\n$hamburger-padding-x                       : 0px !default;\n$hamburger-padding-y                       : 3px !default;\n$hamburger-layer-width                     : 40px !default;\n$hamburger-layer-height                    : 4px !default;\n$hamburger-layer-spacing                   : 6px !default;\n$hamburger-layer-color                     : $very-light-grey !default;\n$hamburger-layer-border-radius             : 4px !default;\n$hamburger-hover-opacity                   : 1 !default;\n$hamburger-hover-transition-duration       : 0.15s !default;\n$hamburger-hover-transition-timing-function: linear !default;\n\n// To use CSS filters as the hover effect instead of opacity,\n// set $hamburger-hover-use-filter as true and\n// change the value of $hamburger-hover-filter accordingly.\n$hamburger-hover-use-filter: false !default;\n$hamburger-hover-filter    : opacity(50%) !default;\n\n// Types (Remove or comment out what you donâ€™t need)\n// ==================================================\n$hamburger-types: (\n  squeeze\n) !default;\n\n// Base Hamburger (We need this)\n// ==================================================\n@import \"base\";\n\n// Hamburger types\n// ==================================================\n@import \"types/squeeze\";\n\n\n// ==================================================\n// Cooking up additional types:\n//\n// The Sass for each hamburger type should be nested\n// inside an @if directive to check whether or not\n// it exists in $hamburger-types so only the CSS for\n// included types are generated.\n//\n// e.g. hamburgers/types/_new-type.scss\n//\n// @if index($hamburger-types, new-type) {\n//   .hamburger--new-type {\n//     ...\n//   }\n// }\n","// Hamburger\n// ==================================================\n.hamburger {\n  padding: $hamburger-padding-y $hamburger-padding-x;\n  display: inline-block;\n  cursor: pointer;\n  outline: none;\n\n  transition-property: opacity, filter;\n  transition-duration: $hamburger-hover-transition-duration;\n  transition-timing-function: $hamburger-hover-transition-timing-function;\n\n  // Normalize (<button>)\n  font: inherit;\n  color: inherit;\n  text-transform: none;\n  background-color: transparent;\n  border: 0;\n  margin: 0;\n  overflow: visible;\n\n  &:hover {\n    @if $hamburger-hover-use-filter == true {\n      filter: $hamburger-hover-filter;\n    }\n    @else {\n      opacity: $hamburger-hover-opacity;\n    }\n  }\n\n  &__box {\n    width: $hamburger-layer-width;\n    height: $hamburger-layer-height * 3 + $hamburger-layer-spacing * 2;\n    display: inline-block;\n    position: relative;\n  }\n\n  &__inner {\n    display: block;\n    top: 50%;\n    margin-top: $hamburger-layer-height / -2;\n\n    &,\n    &::before,\n    &::after {\n      width: $hamburger-layer-width;\n      height: $hamburger-layer-height;\n      background-color: $hamburger-layer-color;\n      border-radius: $hamburger-layer-border-radius;\n      position: absolute;\n      transition-property: transform;\n      transition-duration: 0.15s;\n      transition-timing-function: ease;\n    }\n\n    &::before,\n    &::after {\n      content: \"\";\n      display: block;\n    }\n\n    &::before {\n      top: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;\n    }\n\n    &::after {\n      bottom: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;\n    }\n  }\n}\n","// -----------------------------------------------------------------------------\n// Color variables live here.\n// -----------------------------------------------------------------------------\n//\n// Use http://www.htmlcsscolor.com/hex/\n// to determine the name for the variables.\n//\n// -----------------------------------------------------------------------------\n// EXAMPLE\n// =============================================================================\n// $medium-orchid   :   #af3fc2;\n// $midnight-blue   :   #1d1075;\n// -----------------------------------------------------------------------------\n\n// Generic Colors\n$white: #ffffff;\n$black: #000000;\n\n// Brand Colors\n$brandPrimary: #1d72b1;\n\n// Site Colors\n$night-rider: #333333;\n$very-light-grey: #cccccc;\n$whisper: #e4e4e4;\n","@if index($hamburger-types, squeeze) {\n  /*\n   * Squeeze\n   */\n  .hamburger--squeeze {\n    .hamburger__inner {\n      transition-duration: 0.075s;\n      transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);\n\n      &::before {\n        transition: top 0.075s 0.12s ease,\n                    opacity 0.075s ease;\n      }\n\n      &::after {\n        transition: bottom 0.075s 0.12s ease,\n                    transform 0.075s cubic-bezier(0.55, 0.055, 0.675, 0.19);\n      }\n    }\n\n    &.hamburger--active {\n      .hamburger__inner {\n        transform: rotate(45deg);\n        transition-delay: 0.12s;\n        transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n\n        &::before {\n          top: 0;\n          opacity: 0;\n          transition: top 0.075s ease,\n                      opacity 0.075s 0.12s ease;\n        }\n\n        &::after {\n          bottom: 0;\n          transform: rotate(-90deg);\n          transition: bottom 0.075s ease,\n                      transform 0.075s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1);\n        }\n      }\n    }\n  }\n}\n"]}